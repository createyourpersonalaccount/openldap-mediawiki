from invoke import task
from pathlib import Path

# TODO make these configurable
domain = "ldap.cclub"
email = "rso_cclub@wmich.edu"

dir = Path("x509-cert")
cnf = dir / "cert.cnf"
crt = / "ldapscert.pem"
key = Path("secrets/ldapskey.key")

# See
# <https://docs.joshuatz.com/cheatsheets/security/self-signed-ssl-certs/>
@task
def generate(c):
    """Generate an x509 certificate."""
    with open(cnf, "w") as f:
        f.write(
f"""# Autogenerated by pyinvoke.
[req]
default_bits           = 2048
distinguished_name     = req_distinguished_name
attributes             = req_attributes
prompt                 = no
req_extensions         = v3_req
encrypt_key            = no
default_md             = sha256
default_keyfile        = {key}

[req_distinguished_name]
countryName            = US
stateOrProvinceName    = Michigan
localityName           = Kalamazoo
organizationName       = Western Michigan University
organizationalUnitName = Computer Club
commonName             = {domain}
emailAddress           = {email}

[req_attributes]

[v3_req]
# basicConstraints = CA:FALSE
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
# extendedKeyUsage = clientAuth,serverAuth
""")
    # Command to execute to create the certificate.
    c.run(f"openssl req -config {cnf} -newkey rsa -x509 -days 365 -out {crt}", echo=True)

@task(help={'path': f"Path to the certificate. (default: {crt})"})
def inspect(c, path=crt):
    """Inspect the generated x509 certificate."""
    c.run(f"openssl x509 -in {path} -text -noout", echo=True)
